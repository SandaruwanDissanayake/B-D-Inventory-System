/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package GUI.DialogBox;

import GUI.MainFrame.Login;
import Models.MySQL;
import com.mysql.cj.xdevapi.Table;
import java.awt.Dialog;
import java.sql.ResultSet;
import java.util.HashMap;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mr. SP
 */
public class SelectStock extends javax.swing.JDialog {

    private ChangeProducts changeProducts;
    private String barcode;
    private int customerType;
    private HashMap<String, String> stockPrice = new HashMap<>();

    /**
     * Creates new form SelectStock
     */
    public SelectStock(Dialog parent, boolean modal, String barcode, ChangeProducts changeProduct, int customerType) {
        super(parent, modal);
        initComponents();
        this.changeProducts = changeProduct;
        this.barcode = barcode;
        this.customerType = customerType;
        loadTable();

    }

    private void loadTable() {
        HashMap<Object, Object> hashMap = new HashMap<>();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);

        try {
            ResultSet rs = MySQL.execute("SELECT * FROM `stock` INNER JOIN `product` ON `product`.`id`=`stock`.`product_id` WHERE `stock`.`product_id` = '" + barcode + "' OR `product`.`model_number` = '" + barcode + "'");
            while (rs.next()) {
//                System.out.println("sumid"+sumId);

                Vector<String> v = new Vector<>();
                v.add(rs.getString("id"));
                v.add(rs.getString("qty"));
                v.add(rs.getString("shop_price"));
                v.add(rs.getString("daily_cutomer_price"));
                v.add(rs.getString("new_customer_price"));
                model.addRow(v);
                switch (customerType) {
                    case 1:
                        stockPrice.put(rs.getString("id"), rs.getString("shop_price"));
                        break;
                    case 2:
                        stockPrice.put(rs.getString("id"), rs.getString("daily_cutomer_price"));
                        break;
                    case 3:
                        stockPrice.put(rs.getString("id"), rs.getString("new_customer_price"));
                        break;
                    default:
                        break;
                }

//                addpiv.setStockId(rs.getString("id"));
//                addpiv.setSqty(rs.getInt("qty"));
//                addpiv.setShopPrice(rs.getString("shop_price"));
//                addpiv.setSpecialPrice(rs.getString("daily_cutomer_price"));
//                addpiv.setSetupPrice(rs.getString("new_customer_price"));
            }
            jTable1.setModel(model);
        } catch (Exception e) {
                       Login.log1.warning(e.getMessage());

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Stock ID", "Available Quantity", "Price(Shop)", "Price(New Customer)", "Price(Daily Customer)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 686, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (evt.getClickCount() == 2) {
            int row = jTable1.getSelectedRow();
            String stockId = (String) jTable1.getValueAt(row, 0);
//            ShowAllSerials showAllSerials = new ShowAllSerials(this, true, changeProducts, stockId);
//            showAllSerials.setVisible(true);
//            addpiv.setStockId(String.valueOf(jTable1.getValueAt(row, 0)));
//            addpiv.setSqty(Integer.parseInt(String.valueOf(jTable1.getValueAt(row, 1))));
//            addpiv.setShopPrice(String.valueOf(jTable1.getValueAt(row, 2)));
//            addpiv.setSpecialPrice(String.valueOf(jTable1.getValueAt(row, 3)));
//            addpiv.setSetupPrice(String.valueOf(jTable1.getValueAt(row, 4)));

            try {
                ResultSet serialSet = MySQL.execute("SELECT COUNT(grn_item.id) AS count FROM `grn_item` INNER JOIN `product_sn` ON `product_sn`.`grn_item_id`=`grn_item`.`id` WHERE `stock_id` = '" + stockId + "' AND `product_sn_status_id` = '1'");
                if (serialSet.next()) {
                    if (serialSet.getInt("count") > 0) {
                        System.out.println("1");
                        ShowAllSerials showAllSerials = new ShowAllSerials(this, true, changeProducts, stockId);
                        this.dispose();
                        showAllSerials.setVisible(true);

                    } else {
                        System.out.println("2");

                        this.changeProducts.addProductToTable(stockId, "stock", 6, this.stockPrice.get(stockId));
                        this.dispose();
                    }
                }

            } catch (Exception e) {
                           Login.log1.warning(e.getMessage());

            }
//                        if(addpiv.getJTextField11().getText().isEmpty()){
//                                serial.setVisible(true);
//                            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SelectStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SelectStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SelectStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SelectStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                SelectStock dialog = new SelectStock(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
