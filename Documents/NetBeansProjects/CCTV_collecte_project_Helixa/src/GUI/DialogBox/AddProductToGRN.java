/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package GUI.DialogBox;

import GUI.MainFrame.Login;
import GUI.MainPanel.AddNewQuotation;
import GUI.MainPanel.GRN;
import GUI.MainPanel.Product;
import Models.AddGRNBean;
import Models.MySQL;
import Models.SelectProductBean;
import java.awt.Dialog;
import java.awt.Frame;
import java.sql.ResultSet;
import java.util.HashMap;
import java.util.Map;
import java.util.UUID;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author PCnet Computers
 */
public class AddProductToGRN extends javax.swing.JDialog {

    AddNewQuotation addNewQuotation;
    HashMap<String, Integer> brandMap = new HashMap<>();
    HashMap<String, Integer> categoryMap = new HashMap<>();
    public SelectProductBean selectProductBean = new SelectProductBean();

    /**
     * Creates new form NewJDialog
     */
    private GRN grn;
    private HashMap<Integer, AddGRNBean> addGRNProductBeanMap;
    AddGRNBean addGRNBean = new AddGRNBean();

    public AddProductToGRN(java.awt.Frame parent, boolean modal, HashMap<Integer, AddGRNBean> addGRNProductBeanMap, GRN grnframe) {

        super(parent, modal);
        initComponents();
        this.addGRNProductBeanMap = addGRNProductBeanMap;
        this.grn = grnframe;
        loadCategory();
        loadBrand();
        jButton6.setVisible(false);
        jButton2.setVisible(false);

        jButton10.setVisible(false);
//        jTextField1.setEditable(false);
    }

    
    public void calculateCost(String text){
        
        
        if(text.isBlank()){
            
        }else if(text == null){
            
        }else{
        
            double NewCustomerPrice = Double.parseDouble(text) + (Double.parseDouble(text) /100 * 50);
            double dailyCustomer = Double.parseDouble(text) + (Double.parseDouble(text) /100 * 60);
            double shopprice = Double.parseDouble(text) + (Double.parseDouble(text) /100 * 70);
        
        
      
        
        jTextField10.setText(String.valueOf(NewCustomerPrice));
        jTextField11.setText(String.valueOf(dailyCustomer));
        jTextField12.setText(String.valueOf(shopprice));
        
        
        
        }
    }
    
    boolean edit;

    public AddProductToGRN(java.awt.Frame parent, boolean modal, HashMap<Integer, AddGRNBean> addGRNProductBeanMap, GRN grnframe, String modelNumber, boolean edit) {

        super(parent, modal);
        initComponents();
        this.addGRNProductBeanMap = addGRNProductBeanMap;
        this.grn = grnframe;
        loadCategory();
        loadBrand();
        this.edit = edit;
        jButton6.setVisible(false);

//        jTextField1.setText(modelNumber);
        jTextField2.setText(modelNumber);
        loadProductData("", modelNumber);
        jTextField2.setEditable(false);
        jTextField1.setEditable(false);
    }

//    public AddProductToGRN(AddNewQuotation parent, boolean modal) {
//       this.addNewQuotation = parent;
//        initComponents();
//    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jTextField8 = new javax.swing.JFormattedTextField();
        jTextField9 = new javax.swing.JFormattedTextField();
        jTextField10 = new javax.swing.JFormattedTextField();
        jTextField11 = new javax.swing.JFormattedTextField();
        jTextField12 = new javax.swing.JFormattedTextField();
        jButton2 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel3.setPreferredSize(new java.awt.Dimension(809, 130));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Add Product to GRN");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Barcode");

        jTextField1.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1CaretUpdate(evt);
            }
        });
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Product Model");

        jTextField2.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField2CaretUpdate(evt);
            }
        });
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton9.setText("clear");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 229, Short.MAX_VALUE)
                                .addComponent(jButton9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1)))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(28, 28, 28))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1)
                            .addComponent(jButton9))))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3, java.awt.BorderLayout.PAGE_START);

        jPanel4.setPreferredSize(new java.awt.Dimension(400, 600));

        jLabel10.setText("Quantity");

        jLabel11.setText("Buying Price");

        jLabel12.setText("Price (New Cutomer)");

        jLabel13.setText("Price (Daily Customer)");

        jLabel14.setText("Price (Shop)");

        jButton3.setText("Add To GRN");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton7.setText("Cancel");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Clear");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jTextField8.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField8KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField8KeyReleased(evt);
            }
        });

        jTextField9.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField9KeyReleased(evt);
            }
        });

        jTextField10.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField10KeyReleased(evt);
            }
        });

        jTextField11.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField11KeyReleased(evt);
            }
        });

        jTextField12.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField12.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField12KeyReleased(evt);
            }
        });

        jButton2.setText("Serial Number");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton10.setText("Warranty");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 125, Short.MAX_VALUE)
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3))
                    .addComponent(jTextField8)
                    .addComponent(jTextField9)
                    .addComponent(jTextField10)
                    .addComponent(jTextField11)
                    .addComponent(jTextField12)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton7)
                    .addComponent(jButton8))
                .addContainerGap())
        );

        getContentPane().add(jPanel4, java.awt.BorderLayout.LINE_END);

        jPanel5.setPreferredSize(new java.awt.Dimension(400, 600));

        jLabel4.setText("Barcode");

        jTextField3.setForeground(new java.awt.Color(0, 0, 255));
        jTextField3.setDisabledTextColor(new java.awt.Color(51, 51, 255));
        jTextField3.setEnabled(false);

        jLabel5.setText("Product Title");

        jTextField4.setForeground(new java.awt.Color(0, 0, 255));
        jTextField4.setDisabledTextColor(new java.awt.Color(51, 51, 255));
        jTextField4.setEnabled(false);

        jTextField5.setForeground(new java.awt.Color(0, 0, 255));
        jTextField5.setDisabledTextColor(new java.awt.Color(51, 51, 255));
        jTextField5.setEnabled(false);

        jLabel6.setText("Model Number");

        jLabel7.setText("Brand");

        jLabel8.setText("Category");

        jLabel9.setText("Description");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setEnabled(false);
        jScrollPane1.setViewportView(jTextArea1);

        jComboBox1.setEditable(true);
        jComboBox1.setForeground(new java.awt.Color(0, 0, 255));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.setEnabled(false);
        jComboBox1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox1FocusGained(evt);
            }
        });
        jComboBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jComboBox1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jComboBox1MouseReleased(evt);
            }
        });

        jButton4.setText("+");
        jButton4.setEnabled(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jComboBox2.setEditable(true);
        jComboBox2.setForeground(new java.awt.Color(0, 0, 255));
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox2.setEnabled(false);
        jComboBox2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox2FocusGained(evt);
            }
        });
        jComboBox2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox2MouseClicked(evt);
            }
        });

        jButton5.setText("+");
        jButton5.setEnabled(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Add Product Details To System");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField3)
                    .addComponent(jTextField4)
                    .addComponent(jTextField5)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4)
                            .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton6)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addComponent(jButton6)
                .addContainerGap())
        );

        getContentPane().add(jPanel5, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void selectDuplicateProductData() {

        String productModel = "";
        if (!jTextField1.getText().isEmpty()) {
            productModel = jTextField1.getText();
        } else {
            productModel = jTextField2.getText();
        }
        if (selectProductBean.getModelNumber().equals("null")) {
            Frame parentFrame = (Frame) SwingUtilities.getWindowAncestor(this);

            SelectDuplicateProduct selectDuplicateProduct = new SelectDuplicateProduct(parentFrame, true, productModel, selectProductBean, this);
            selectDuplicateProduct.setVisible(true);
        } else {

            if (selectProductBean.getModelNumber().equals(productModel)) {

                jTextField3.setText(selectProductBean.getModelNumber());
                jTextField4.setText(selectProductBean.getTitle());
                jTextField5.setText(selectProductBean.getModelNumber());
                jComboBox1.setSelectedIndex(selectProductBean.getBrandNumber());

                jComboBox2.setSelectedIndex(selectProductBean.getCategoryNumber());

                jTextArea1.setText(selectProductBean.getDescription());

                selectProductBean.setBrandNumber(0);
                selectProductBean.setCategoryNumber(0);
                selectProductBean.setDescription("");
                selectProductBean.setModelNumber("null");
                selectProductBean.setTitle("");

            } else {

                JOptionPane.showMessageDialog(this, "Pleace Search Model Number ", "Warning", JOptionPane.WARNING_MESSAGE);

            }

        }

    }

    private void loadProductData(String barcord, String modelnum) {

        String model = modelnum;
        String barcordnum = barcord;

        try {
            ResultSet resultSet1 = null;
            if (!model.isEmpty()) {
                resultSet1 = MySQL.execute("SELECT * FROM `product` "
                        + "INNER JOIN `category` ON `product`.`category_id`=`category`.`id` "
                        + "INNER JOIN `brand` ON `brand`.`id`=`product`.`brand_id` "
                        + "WHERE `model_number`='" + model + "'");
            } else if (!barcord.isEmpty()) {
                resultSet1 = MySQL.execute("SELECT * FROM `product` "
                        + "INNER JOIN `category` ON `product`.`category_id`=`category`.`id` "
                        + "INNER JOIN `brand` ON `brand`.`id`=`product`.`brand_id` "
                        + "WHERE `product`.`id`='" + barcord + "'");
            } else {

                JOptionPane.showMessageDialog(this, "Please enter the product model or barcode number.", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }

            int resultSetCount = 0;

            while (resultSet1.next()) {
                resultSetCount++;
            }

            if (resultSetCount >= 2) {

                //dialog box ek open wenn oni
                System.out.println("Open dialog box" + resultSetCount);

                selectDuplicateProductData();

            } else if (resultSetCount == 1) {

                System.out.println("one result set" + resultSetCount);
                ResultSet resultSet2 = null;
                if (!model.isEmpty()) {
                    resultSet2 = MySQL.execute("SELECT * FROM `product` "
                            + "INNER JOIN `category` ON `product`.`category_id`=`category`.`id` "
                            + "INNER JOIN `brand` ON `brand`.`id`=`product`.`brand_id` "
                            + "WHERE `model_number`='" + model + "'");
                } else if (!barcord.isEmpty()) {
                    resultSet2 = MySQL.execute("SELECT * FROM `product` "
                            + "INNER JOIN `category` ON `product`.`category_id`=`category`.`id` "
                            + "INNER JOIN `brand` ON `brand`.`id`=`product`.`brand_id` "
                            + "WHERE `product`.`id`='" + barcord + "'");
                }

                if (resultSet2.next()) {

                    if (barcord.isEmpty()) {
                        jTextField1.setText(resultSet2.getString("id"));
                    }

                    jTextField3.setText(resultSet2.getString("model_number"));
                    jTextField4.setText(resultSet2.getString("title"));
                    jTextField5.setText(resultSet2.getString("model_number"));

                    jComboBox1.setSelectedItem(resultSet2.getString("brand.name"));
                    jComboBox2.setSelectedItem(resultSet2.getString("category.name"));

//                jTextField6.setText(resultSet1.getString("brand.name"));
//                jTextField7.setText(resultSet1.getString("category.name"));
                    jTextArea1.setText(resultSet2.getString("description"));

                    jTextField8.setEnabled(true);
                    jTextField9.setEnabled(true);
                    jTextField10.setEnabled(true);
                    jTextField11.setEnabled(true);
                    jTextField12.setEnabled(true);

                }
//                ResultSet resultSet = MySQL.execute("SELECT * FROM `stock` WHERE  `product_id`='" + resultSet1.getString("id") + "'");
//
//                if (resultSet.next()) {
//                    jTextField8.setText(resultSet.getString("stock.qty"));
//                }
                if (!addGRNProductBeanMap.isEmpty()) {
                    for (Map.Entry<Integer, AddGRNBean> entry : addGRNProductBeanMap.entrySet()) {

                        if (entry.getValue().getModelNumber().equals(model)) {
                            jTextField8.setText(String.valueOf(entry.getValue().getQty()));
                            jTextField9.setText(entry.getValue().getBuyingPrice());
                            jTextField10.setText(entry.getValue().getPriceNewCustomer());
                            jTextField11.setText(entry.getValue().getPriceDailyCustomer());
                            jTextField12.setText(entry.getValue().getPriceShop());

                        }

                    }
                }

            } else {
                System.out.println("0 result sEt" + resultSetCount);

                if (!edit) {
                    int response = JOptionPane.showConfirmDialog(null,
                            "This Product is not registerd in the system. Are you entering this product information into the system?",
                            "Confirmation",
                            JOptionPane.YES_NO_OPTION);

                    if (response == 0) {

                        if (!jTextField1.getText().isEmpty()) {

                            String modelnumber = jTextField2.getText();
                            jTextField5.setText(modelnumber);

                            String code = jTextField1.getText();

                            jTextField3.setText(code);
                            jTextField3.setEditable(false);
                            jTextField1.setEditable(false);

                        }

                        if (!jTextField2.getText().isEmpty()) {

                            String code = jTextField1.getText();

                            jTextField3.setText(code);
                            jTextField2.setEditable(false);
                            jTextField3.setEditable(false);
                            String modelnumber = jTextField2.getText();
                            jTextField5.setText(modelnumber);

                        }

                        jButton6.setVisible(true);
                        jTextField4.setEnabled(true);
                        jTextArea1.setEnabled(true);
                        jTextField5.setText(jTextField2.getText());
                        jComboBox1.setEnabled(true);
                        jComboBox2.setEnabled(true);
//                    jButton2.setEnabled(false);
                        jButton3.setEnabled(false);
                        jTextField8.setEnabled(false);
                        jTextField9.setEnabled(false);
                        jTextField10.setEnabled(false);
                        jTextField11.setEnabled(false);
                        jTextField12.setEnabled(false);
                        jButton4.setEnabled(true);
                        jButton5.setEnabled(true);
                        jButton3.setEnabled(false);
                        jTextField3.setEnabled(true);
                        jTextField5.setEnabled(true);
//                    jTextArea1.setText(resultSet1.getString("description"));

                    } else {

                        jTextField2.setText("");
                    }

                }
            }

            if (resultSet1.next()) {

//                jTextField3.setText(resultSet1.getString("model_number"));
//                jTextField4.setText(resultSet1.getString("title"));
//                jTextField5.setText(resultSet1.getString("model_number"));
//                jComboBox1.setSelectedIndex(resultSet1.getInt("product.brand_id"));
//
//                jComboBox2.setSelectedIndex(resultSet1.getInt("product.category_id"));
////                jTextField6.setText(resultSet1.getString("brand.name"));
////                jTextField7.setText(resultSet1.getString("category.name"));
//
//                jTextArea1.setText(resultSet1.getString("description"));
//
//                jTextField8.setEnabled(true);
//                jTextField9.setEnabled(true);
//                jTextField10.setEnabled(true);
//                jTextField11.setEnabled(true);
//                jTextField12.setEnabled(true);
//
////                ResultSet resultSet = MySQL.execute("SELECT * FROM `stock` WHERE  `product_id`='" + resultSet1.getString("id") + "'");
////
////                if (resultSet.next()) {
////                    jTextField8.setText(resultSet.getString("stock.qty"));
////                }
//                if (!addGRNProductBeanMap.isEmpty()) {
//                    for (Map.Entry<Integer, AddGRNBean> entry : addGRNProductBeanMap.entrySet()) {
//
//                        if (entry.getValue().getModelNumber().equals(modelNumber)) {
//                            jTextField8.setText(String.valueOf(entry.getValue().getQty()));
//                            jTextField9.setText(entry.getValue().getBuyingPrice());
//                            jTextField10.setText(entry.getValue().getPriceNewCustomer());
//                            jTextField11.setText(entry.getValue().getPriceDailyCustomer());
//                            jTextField12.setText(entry.getValue().getPriceShop());
//
//                        }
//
//                    }
//                }
            } else {

//                if (!edit) {
//                    int response = JOptionPane.showConfirmDialog(null,
//                            "This Product is not registerd in the system. Are you entering this product information into the system?",
//                            "Confirmation",
//                            JOptionPane.YES_NO_OPTION);
//
//                    if (response == 0) {
//
//                        jTextField3.setText(jTextField2.getText());
//                        jButton6.setVisible(true);
//                        jTextField4.setEnabled(true);
//                        jTextArea1.setEnabled(true);
//                        jTextField5.setText(jTextField2.getText());
//                        jComboBox1.setEnabled(true);
//                        jComboBox2.setEnabled(true);
////                    jButton2.setEnabled(false);
//                        jButton3.setEnabled(false);
//                        jTextField8.setEnabled(false);
//                        jTextField9.setEnabled(false);
//                        jTextField10.setEnabled(false);
//                        jTextField11.setEnabled(false);
//                        jTextField12.setEnabled(false);
//                        jButton4.setEnabled(true);
//                        jButton5.setEnabled(true);
//                        jButton3.setEnabled(false);
//                        jTextField3.setEnabled(true);
//                        jTextField5.setEnabled(true);
////                    jTextArea1.setText(resultSet1.getString("description"));
//
//                    } else {
//
//                        jTextField2.setText("");
//                    }
//
//                }
            }

        } catch (Exception e) {
             Login.log1.warning(e.getMessage());
        }
    }

    private void addProductToGRN() {

        String productModel = jTextField5.getText();

//        if (!jTextField1.getText().isEmpty()) {
//            productModel = jTextField1.getText();
//        } else if (!jTextField2.getText().isEmpty()) {
//            productModel = jTextField2.getText();
//        }
        if (!productModel.equals("")) {
            System.out.println("not empty jT2");
            if (productModel.equals(jTextField5.getText())) {
                boolean haveProduct = false;

                if (addGRNProductBeanMap.isEmpty()) {
                    System.out.println("beanMap empty");
                    grn.mapIndex = 0;

                } else {
                    System.out.println("beanMap not empty");
                    for (Map.Entry<Integer, AddGRNBean> mapData : addGRNProductBeanMap.entrySet()) {
                        if (jTextField5.getText().equals(mapData.getValue().getModelNumber()) && jTextField4.getText().equals(mapData.getValue().getTitle())) {
                            System.out.println("have product");
                            //update table qty

//                            int oldQty = mapData.getValue().getQty();
//                            int newQty = Integer.parseInt(jTextField8.getText());
//                            int updateqty = oldQty + newQty;
                            int updateqty = Integer.parseInt(jTextField8.getText());
                            String updatebuyingPrice = jTextField9.getText();
                            String updatednewCustomerPrice = jTextField10.getText();
                            String updateDailyCustomerPrice = jTextField11.getText();
                            String updateShopCustomerPrice = jTextField12.getText();

                            mapData.getValue().setQty(updateqty);
                            mapData.getValue().setBuyingPrice(updatebuyingPrice);
                            mapData.getValue().setPriceNewCustomer(updatednewCustomerPrice);
                            mapData.getValue().setPriceDailyCustomer(updateDailyCustomerPrice);
                            mapData.getValue().setPriceShop(updateShopCustomerPrice);

                            grn.loadGRNTable();

                            haveProduct = true;
                            break;
                        } else {
                            System.out.println("Not have Product");
                            haveProduct = false;

                        }
                    }
                }
                if (!haveProduct) {
                    grn.mapIndex++;

                    System.out.println("hi");

                    String title = jTextField4.getText();
                    String modelNumber = jTextField5.getText();
                    String category = String.valueOf(jComboBox2.getSelectedItem());
                    String brand = String.valueOf(jComboBox1.getSelectedItem());
                    String description = jTextArea1.getText();
                    int qty = Integer.parseInt(jTextField8.getText());

                    String buyingPrice = jTextField9.getText();
                    String Price_NewCutomer = jTextField10.getText();
                    String PriceDaily_Customer = jTextField11.getText();
                    String Price_Shop = jTextField12.getText();

                    this.addGRNBean = new AddGRNBean();

                    addGRNBean.setTitle(title);
                    addGRNBean.setBrand(brand);
                    addGRNBean.setBuyingPrice(buyingPrice);
                    addGRNBean.setCategory(category);
                    addGRNBean.setModelNumber(description);
                    addGRNBean.setPriceDailyCustomer(PriceDaily_Customer);
                    addGRNBean.setPriceNewCustomer(Price_NewCutomer);
                    addGRNBean.setPriceShop(Price_Shop);
                    addGRNBean.setQty(qty);
                    addGRNBean.setModelNumber(modelNumber);

//                    System.out.println(mapIndex);
                    System.out.println(grn.mapIndex);
                    addGRNProductBeanMap.put(grn.mapIndex, addGRNBean);

                    grn.loadGRNTable();
                }
                System.out.println(haveProduct);

            }

        }

    }

    private void loadBrand() {
        try {
            ResultSet resultset = MySQL.execute("SELECT * FROM `brand`");

            Vector<Object> vector = new Vector<>();
            vector.add("Select");
            while (resultset.next()) {
                vector.add(resultset.getString("name"));
                brandMap.put(resultset.getString("name"), resultset.getInt("id"));

            }
            DefaultComboBoxModel model = (DefaultComboBoxModel) jComboBox1.getModel();
            model.removeAllElements();
            model.addAll(vector);
            jComboBox1.setSelectedIndex(0);

        } catch (Exception e) {
            Login.log1.warning(e.getMessage());
        }

    }

    private void loadCategory() {
        try {
            ResultSet resultSet = MySQL.execute("SELECT * FROM `category`");

            Vector<Object> vector = new Vector<>();
            vector.add("Select");
            while (resultSet.next()) {
                vector.add(resultSet.getString("name"));
                categoryMap.put(resultSet.getString("name"), resultSet.getInt("id"));

            }
            DefaultComboBoxModel model = (DefaultComboBoxModel) jComboBox2.getModel();

            model.removeAllElements();
            model.addAll(vector);
            jComboBox2.setSelectedIndex(0);

        } catch (Exception e) {
             Login.log1.warning(e.getMessage());
        }
    }

    public void clearAddProducttoGRN() {

        if (!edit) {
            jTextArea1.setText("");
            jTextField1.setText("");
            jTextField2.setText("");
            jTextField3.setText("");
            jTextField4.setText("");
            jTextField5.setText("");
            jComboBox1.setSelectedItem("Select");
            jComboBox2.setSelectedItem("Select");

            jTextField8.setText("");
            jTextField9.setText("");
            jTextField10.setText("");
            jTextField11.setText("");
            jTextField12.setText("");

            jTextField8.setEnabled(false);
            jTextField9.setEnabled(false);
            jTextField10.setEnabled(false);
            jTextField11.setEnabled(false);
            jTextField12.setEnabled(false);

        } else {

            jTextArea1.setEnabled(false);
            jTextField1.setEnabled(false);
            jTextField2.setEnabled(false);
            jTextField3.setEnabled(false);
            jTextField4.setEnabled(false);
            jTextField5.setEnabled(false);
            jComboBox1.setEnabled(false);
            jComboBox2.setEnabled(false);

            jTextField8.setText("");
            jTextField9.setText("");
            jTextField10.setText("");
            jTextField11.setText("");
            jTextField12.setText("");

            jTextField8.setEnabled(true);
            jTextField9.setEnabled(true);
            jTextField10.setEnabled(true);
            jTextField11.setEnabled(true);
            jTextField12.setEnabled(true);
            jButton2.setVisible(true);

        }
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String barcode = jTextField1.getText();
        String model = jTextField2.getText();
        if (!barcode.isEmpty() || !model.isEmpty()) {
            loadProductData(barcode, model);
//            jTextField1.setEditable(false);
//            jTextField2.setEditable(false);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        Frame parantDialog = (Frame) SwingUtilities.getWindowAncestor(this);
        AddNewProductBrand addProductBrand = new AddNewProductBrand(parantDialog, true);
        addProductBrand.setVisible(true);

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Frame parantDialog = (Frame) SwingUtilities.getWindowAncestor(this);
        AddNewProductCategory addProductCategory = new AddNewProductCategory(parantDialog, true);
        addProductCategory.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jComboBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MouseClicked


    }//GEN-LAST:event_jComboBox1MouseClicked

    private void jComboBox2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox2MouseClicked
        loadCategory();
    }//GEN-LAST:event_jComboBox2MouseClicked

    private void jComboBox1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox1FocusGained
        // TODO add your handling code here:
        loadBrand();

    }//GEN-LAST:event_jComboBox1FocusGained

    private void jComboBox1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MousePressed
        // TODO add your handling code here:

    }//GEN-LAST:event_jComboBox1MousePressed

    private void jComboBox1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MouseReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_jComboBox1MouseReleased

    private void jComboBox2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox2FocusGained
        loadCategory();        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2FocusGained

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

        String productId = "";

        if (!jTextField1.getText().isEmpty()) {

            productId = jTextField1.getText();
        } else {

            productId = String.valueOf(System.currentTimeMillis());

        }

        String modelNumber = jTextField5.getText();
        String title = jTextField4.getText();
        String description = jTextArea1.getText();
        String brand = String.valueOf(jComboBox1.getSelectedItem());
        String category = String.valueOf(jComboBox2.getSelectedItem());

        if (title.isEmpty() || modelNumber.isEmpty() || brand.equals("Select") || category.equals("Select") || description.isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "Please fill in all required fields.",
                    "Incomplete Form",
                    JOptionPane.WARNING_MESSAGE);
        } else {
            int brandId = brandMap.get(brand);
            int categoryId = categoryMap.get(category);

//            String uniqueID = UUID.randomUUID().toString();
            try {

                ResultSet resultSet = MySQL.execute("SELECT * FROM `product` WHERE `id`='" + productId + "' ");

                if (resultSet.next()) {
                    JOptionPane.showMessageDialog(this,
                            "This product is already registered in the system.",
                            "Duplicate Product Warning",
                            JOptionPane.WARNING_MESSAGE);

                } else {

                    MySQL.execute("INSERT INTO `product` VALUES ('" + productId + "','" + categoryId + "','" + brandId + "','" + modelNumber + "','" + title + "','" + description + "')");

                    int option = JOptionPane.showConfirmDialog(
                            this,
                            "The product has been successfully inserted into the system. Do you want to print the barcode?",
                            "Update Successful",
                            JOptionPane.YES_NO_OPTION,
                            JOptionPane.QUESTION_MESSAGE
                    );

                    if (option == JOptionPane.YES_OPTION) {

                        HashMap<String, Object> hashmapBarcode = new HashMap<>();
                        hashmapBarcode.put("barcodeNumber", productId);
                        hashmapBarcode.put("producttitle", title);
                        try {
                            JasperCompileManager.compileReportToFile("src/Report/barcord.jrxml");

                            JasperPrint report = JasperFillManager.fillReport("src/Report/barcord.jasper", hashmapBarcode, new JREmptyDataSource());
                            JasperViewer.viewReport(report, false);

                        } catch (Exception e) {
                            Login.log1.warning(e.getMessage());
                        }

                    }

                }

            } catch (Exception ex) {
                Logger.getLogger(Product.class.getName()).log(Level.SEVERE, null, ex);
                 Login.log1.warning(ex.getMessage());
            }

//            JOptionPane.showMessageDialog(this,
//                    "Product has been successfully inserted into the system.",
//                    "Success",
//                    JOptionPane.INFORMATION_MESSAGE);
            jButton6.setVisible(false);
            jTextField4.setEnabled(false);
            jTextArea1.setEnabled(false);

            jComboBox1.setEnabled(false);
            jComboBox2.setEnabled(false);
//            jButton2.setEnabled(true);
            jButton3.setEnabled(true);
            jTextField8.setEnabled(true);
            jTextField9.setEnabled(true);
            jTextField10.setEnabled(true);
            jTextField11.setEnabled(true);
            jTextField12.setEnabled(true);
            jButton4.setEnabled(false);
            jButton5.setEnabled(false);
            jButton3.setEnabled(true);

        }


    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (jTextField5.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Pleace Select Product", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (jTextField8.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Pleace Enter Product Quantity", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (jTextField9.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Pleace Enter Product Buying Price", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (jTextField10.getText().isEmpty() || jTextField11.getText().isEmpty() || jTextField12.getText().isEmpty()) {

            JOptionPane.showMessageDialog(this, "Please fill in all Price fields", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {

            addProductToGRN();

            int option = JOptionPane.showConfirmDialog(
                    this,
                    "Do you want to insert the warranty price?",
                    "Confirmation",
                    JOptionPane.YES_NO_OPTION
            );

            if (option == JOptionPane.YES_OPTION) {
                // Open warranty dialog box

                String title = jTextField4.getText();
                String modelNumber = jTextField5.getText();
                Frame parentFrame = (Frame) SwingUtilities.getWindowAncestor(this);

                AddProductWarranty addproductWarranty = new AddProductWarranty(parentFrame, true, title, modelNumber, addGRNProductBeanMap, grn, addGRNBean);
                addproductWarranty.setVisible(true);

            }

            if (jComboBox2.getSelectedItem().equals("Camera") || jComboBox2.getSelectedItem().equals("DVR")) {
                if (jTextField4.getText().isEmpty() || jTextField5.getText().isEmpty() || jComboBox1.getSelectedIndex() == 0 || jComboBox2.getSelectedIndex() == 0) {
                    JOptionPane.showMessageDialog(this, "Pleace Fill the product details", "Warning", JOptionPane.WARNING_MESSAGE);
                } else {

                    String title = jTextField4.getText();
                    String modelNumber = jTextField5.getText();
                    int qty = Integer.parseInt(jTextField8.getText());
                    Frame parentFrame = (Frame) SwingUtilities.getWindowAncestor(this);

                    AddSerialNumber addSerialNumber = new AddSerialNumber(parentFrame, true, title, modelNumber, qty, addGRNProductBeanMap, grn, addGRNBean, this);
                    addSerialNumber.setVisible(true);
                }
            }

            if (edit) {
                this.dispose();
            }

            clearAddProducttoGRN();
            
                    GRN.jFormattedTextField6.setEnabled(true);
        GRN.jComboBox1.setEnabled(true);

        }


    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:

//        for (Map.Entry<Integer, AddGRNBean> entry : addGRNProductBeanMap.entrySet()) {
//            Object key = entry.getKey();
//
//            System.out.println(key);
//
//            for (String serialNumbers : entry.getValue().getSerialNumberList()) {
//                System.out.println("Serial Number: " + serialNumbers);
//            }
//
//        }
        this.dispose();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jTextField2CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField2CaretUpdate
        // TODO add your handling code here:


    }//GEN-LAST:event_jTextField2CaretUpdate

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int qty = Integer.parseInt(jTextField8.getText());
        String title = jTextField4.getText();
        String modelNumber = jTextField5.getText();
        Frame parentFrame = (Frame) SwingUtilities.getWindowAncestor(this);
        boolean edit = true;
        AddSerialNumber addSerialNumber = new AddSerialNumber(parentFrame, true, title, modelNumber, qty, addGRNProductBeanMap, grn, addGRNBean, edit);
        addSerialNumber.setVisible(true);

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        clearAddProducttoGRN();


    }//GEN-LAST:event_jButton8ActionPerformed

    private void jTextField1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1CaretUpdate
        // TODO add your handling code here:

        // loadProductData();

    }//GEN-LAST:event_jTextField1CaretUpdate

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
        String model = jTextField2.getText();
        if (!model.isEmpty()) {
            loadProductData("", model);
        }
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField8KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField8KeyPressed

         
        
    }//GEN-LAST:event_jTextField8KeyPressed

    private void jTextField9KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField9KeyReleased
        // TODO add your handling code here:

        if (!jTextField9.getText().matches("[0-9]{1,13}(\\.[0-9]*)?")) {

            jTextField9.setText("");
        }else{
               
            String text =  jTextField9.getText();
            calculateCost(text);
        }
    }//GEN-LAST:event_jTextField9KeyReleased

    private void jTextField8KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField8KeyReleased
        if (!jTextField8.getText().matches("[0-9]{1,13}(\\.[0-9]*)?")) {

            jTextField8.setText("");
            
            
        }
    }//GEN-LAST:event_jTextField8KeyReleased

    private void jTextField10KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField10KeyReleased
        // TODO add your handling code here:
        if (!jTextField10.getText().matches("[0-9]{1,13}(\\.[0-9]*)?")) {

            jTextField10.setText("");
        }
    }//GEN-LAST:event_jTextField10KeyReleased

    private void jTextField11KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField11KeyReleased
        // TODO add your handling code here:
        if (!jTextField11.getText().matches("[0-9]{1,13}(\\.[0-9]*)?")) {

            jTextField11.setText("");
        }

    }//GEN-LAST:event_jTextField11KeyReleased

    private void jTextField12KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField12KeyReleased
        // TODO add your handling code here:
        if (!jTextField12.getText().matches("[0-9]{1,13}(\\.[0-9]*)?")) {

            jTextField12.setText("");
        }
    }//GEN-LAST:event_jTextField12KeyReleased

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        String modelnumber = jTextField2.getText();
        String barcord = jTextField1.getText();
        if (!barcord.isEmpty()) {
            loadProductData( barcord , "");
        }
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed

        clearAddProducttoGRN();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        String title = jTextField4.getText();
        String modelNumber = jTextField5.getText();
        Frame parentFrame = (Frame) SwingUtilities.getWindowAncestor(this);
        boolean edit = true;
        AddProductWarranty addproductWarranty = new AddProductWarranty(parentFrame, true, title, modelNumber, addGRNProductBeanMap, grn, addGRNBean, edit);
        addproductWarranty.setVisible(true);


    }//GEN-LAST:event_jButton10ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddProductToGRN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddProductToGRN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddProductToGRN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddProductToGRN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                var dialog = new AddProductToGRN(new javax.swing.JFrame(), true, addGRNProductBeanMap, grn);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
    }
//        });


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JFormattedTextField jTextField10;
    private javax.swing.JFormattedTextField jTextField11;
    private javax.swing.JFormattedTextField jTextField12;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JFormattedTextField jTextField8;
    private javax.swing.JFormattedTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
